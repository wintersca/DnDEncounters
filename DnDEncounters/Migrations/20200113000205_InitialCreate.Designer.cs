// <auto-generated />
using System;
using DnDEncounters.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DnDEncounters.Migrations
{
    [DbContext(typeof(DnDEncounterContext))]
    [Migration("20200113000205_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DnDEncounters.Models.Feature", b =>
                {
                    b.Property<int>("FeatureID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MonsterID")
                        .HasColumnType("int");

                    b.Property<int?>("NPCID")
                        .HasColumnType("int");

                    b.Property<int?>("PlayerID")
                        .HasColumnType("int");

                    b.HasKey("FeatureID");

                    b.HasIndex("MonsterID");

                    b.HasIndex("NPCID");

                    b.HasIndex("PlayerID");

                    b.ToTable("Feature");
                });

            modelBuilder.Entity("DnDEncounters.Models.Language", b =>
                {
                    b.Property<int>("LanguageID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MonsterID")
                        .HasColumnType("int");

                    b.Property<int?>("NPCID")
                        .HasColumnType("int");

                    b.Property<int?>("PlayerID")
                        .HasColumnType("int");

                    b.HasKey("LanguageID");

                    b.HasIndex("MonsterID");

                    b.HasIndex("NPCID");

                    b.HasIndex("PlayerID");

                    b.ToTable("Language");
                });

            modelBuilder.Entity("DnDEncounters.Models.LegendaryAction", b =>
                {
                    b.Property<int>("LegendaryActionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MonsterID")
                        .HasColumnType("int");

                    b.Property<int?>("NPCID")
                        .HasColumnType("int");

                    b.HasKey("LegendaryActionId");

                    b.HasIndex("MonsterID");

                    b.HasIndex("NPCID");

                    b.ToTable("LegendaryAction");
                });

            modelBuilder.Entity("DnDEncounters.Models.Monster", b =>
                {
                    b.Property<int>("MonsterID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AC")
                        .HasColumnType("int");

                    b.Property<int>("Acrobatics")
                        .HasColumnType("int");

                    b.Property<string>("Alignment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AnimalHandling")
                        .HasColumnType("int");

                    b.Property<int>("Arcana")
                        .HasColumnType("int");

                    b.Property<int>("Athletics")
                        .HasColumnType("int");

                    b.Property<int>("CR")
                        .HasColumnType("int");

                    b.Property<int>("Cha")
                        .HasColumnType("int");

                    b.Property<int>("ChaSave")
                        .HasColumnType("int");

                    b.Property<int>("Con")
                        .HasColumnType("int");

                    b.Property<int>("ConSave")
                        .HasColumnType("int");

                    b.Property<int>("Deception")
                        .HasColumnType("int");

                    b.Property<int>("Dex")
                        .HasColumnType("int");

                    b.Property<int>("DexSave")
                        .HasColumnType("int");

                    b.Property<int>("FlySpeed")
                        .HasColumnType("int");

                    b.Property<int>("HP")
                        .HasColumnType("int");

                    b.Property<int>("History")
                        .HasColumnType("int");

                    b.Property<int>("Insight")
                        .HasColumnType("int");

                    b.Property<int>("Int")
                        .HasColumnType("int");

                    b.Property<int>("IntSave")
                        .HasColumnType("int");

                    b.Property<int>("Intimidation")
                        .HasColumnType("int");

                    b.Property<int>("Investigation")
                        .HasColumnType("int");

                    b.Property<int>("Medicine")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Nature")
                        .HasColumnType("int");

                    b.Property<int>("PassiveInsight")
                        .HasColumnType("int");

                    b.Property<int>("PassiveInvestigation")
                        .HasColumnType("int");

                    b.Property<int>("PassivePerception")
                        .HasColumnType("int");

                    b.Property<int>("Perception")
                        .HasColumnType("int");

                    b.Property<int>("Performance")
                        .HasColumnType("int");

                    b.Property<int>("Persuasion")
                        .HasColumnType("int");

                    b.Property<int>("Religion")
                        .HasColumnType("int");

                    b.Property<int>("SleightOfHand")
                        .HasColumnType("int");

                    b.Property<string>("Species")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Stealth")
                        .HasColumnType("int");

                    b.Property<int>("Str")
                        .HasColumnType("int");

                    b.Property<int>("StrSave")
                        .HasColumnType("int");

                    b.Property<int>("Survival")
                        .HasColumnType("int");

                    b.Property<int>("SwimSpeed")
                        .HasColumnType("int");

                    b.Property<int>("WalkSpeed")
                        .HasColumnType("int");

                    b.Property<int>("Wis")
                        .HasColumnType("int");

                    b.Property<int>("WisSave")
                        .HasColumnType("int");

                    b.Property<int>("XP")
                        .HasColumnType("int");

                    b.HasKey("MonsterID");

                    b.ToTable("Monster");
                });

            modelBuilder.Entity("DnDEncounters.Models.NPC", b =>
                {
                    b.Property<int>("NPCID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AC")
                        .HasColumnType("int");

                    b.Property<int>("Acrobatics")
                        .HasColumnType("int");

                    b.Property<string>("Alignment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AnimalHandling")
                        .HasColumnType("int");

                    b.Property<int>("Arcana")
                        .HasColumnType("int");

                    b.Property<int>("Athletics")
                        .HasColumnType("int");

                    b.Property<int>("Cha")
                        .HasColumnType("int");

                    b.Property<int>("ChaSave")
                        .HasColumnType("int");

                    b.Property<int>("Con")
                        .HasColumnType("int");

                    b.Property<int>("ConSave")
                        .HasColumnType("int");

                    b.Property<int>("Deception")
                        .HasColumnType("int");

                    b.Property<int>("Dex")
                        .HasColumnType("int");

                    b.Property<int>("DexSave")
                        .HasColumnType("int");

                    b.Property<int>("FlySpeed")
                        .HasColumnType("int");

                    b.Property<int>("HP")
                        .HasColumnType("int");

                    b.Property<int>("History")
                        .HasColumnType("int");

                    b.Property<int>("Insight")
                        .HasColumnType("int");

                    b.Property<int>("Int")
                        .HasColumnType("int");

                    b.Property<int>("IntSave")
                        .HasColumnType("int");

                    b.Property<int>("Intimidation")
                        .HasColumnType("int");

                    b.Property<int>("Investigation")
                        .HasColumnType("int");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<int>("Medicine")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Nature")
                        .HasColumnType("int");

                    b.Property<int>("PassiveInsight")
                        .HasColumnType("int");

                    b.Property<int>("PassiveInvestigation")
                        .HasColumnType("int");

                    b.Property<int>("PassivePerception")
                        .HasColumnType("int");

                    b.Property<int>("Perception")
                        .HasColumnType("int");

                    b.Property<int>("Performance")
                        .HasColumnType("int");

                    b.Property<int>("Persuasion")
                        .HasColumnType("int");

                    b.Property<int>("Religion")
                        .HasColumnType("int");

                    b.Property<int>("SleightOfHand")
                        .HasColumnType("int");

                    b.Property<string>("Species")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Stealth")
                        .HasColumnType("int");

                    b.Property<int>("Str")
                        .HasColumnType("int");

                    b.Property<int>("StrSave")
                        .HasColumnType("int");

                    b.Property<int>("Survival")
                        .HasColumnType("int");

                    b.Property<int>("SwimSpeed")
                        .HasColumnType("int");

                    b.Property<int>("WalkSpeed")
                        .HasColumnType("int");

                    b.Property<int>("Wis")
                        .HasColumnType("int");

                    b.Property<int>("WisSave")
                        .HasColumnType("int");

                    b.Property<int>("XP")
                        .HasColumnType("int");

                    b.HasKey("NPCID");

                    b.ToTable("NPC");
                });

            modelBuilder.Entity("DnDEncounters.Models.Player", b =>
                {
                    b.Property<int>("PlayerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AC")
                        .HasColumnType("int");

                    b.Property<int>("Acrobatics")
                        .HasColumnType("int");

                    b.Property<string>("Alignment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AnimalHandling")
                        .HasColumnType("int");

                    b.Property<int>("Arcana")
                        .HasColumnType("int");

                    b.Property<int>("Athletics")
                        .HasColumnType("int");

                    b.Property<int>("Cha")
                        .HasColumnType("int");

                    b.Property<int>("ChaSave")
                        .HasColumnType("int");

                    b.Property<int>("Con")
                        .HasColumnType("int");

                    b.Property<int>("ConSave")
                        .HasColumnType("int");

                    b.Property<int>("Deception")
                        .HasColumnType("int");

                    b.Property<int>("Dex")
                        .HasColumnType("int");

                    b.Property<int>("DexSave")
                        .HasColumnType("int");

                    b.Property<int>("FlySpeed")
                        .HasColumnType("int");

                    b.Property<int>("HP")
                        .HasColumnType("int");

                    b.Property<int>("History")
                        .HasColumnType("int");

                    b.Property<int>("Insight")
                        .HasColumnType("int");

                    b.Property<int>("Int")
                        .HasColumnType("int");

                    b.Property<int>("IntSave")
                        .HasColumnType("int");

                    b.Property<int>("Intimidation")
                        .HasColumnType("int");

                    b.Property<int>("Investigation")
                        .HasColumnType("int");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<int>("Medicine")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Nature")
                        .HasColumnType("int");

                    b.Property<int>("PassiveInsight")
                        .HasColumnType("int");

                    b.Property<int>("PassiveInvestigation")
                        .HasColumnType("int");

                    b.Property<int>("PassivePerception")
                        .HasColumnType("int");

                    b.Property<int>("Perception")
                        .HasColumnType("int");

                    b.Property<int>("Performance")
                        .HasColumnType("int");

                    b.Property<int>("Persuasion")
                        .HasColumnType("int");

                    b.Property<int>("ProficiencyBonus")
                        .HasColumnType("int");

                    b.Property<int>("Religion")
                        .HasColumnType("int");

                    b.Property<int>("SleightOfHand")
                        .HasColumnType("int");

                    b.Property<string>("Species")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Stealth")
                        .HasColumnType("int");

                    b.Property<int>("Str")
                        .HasColumnType("int");

                    b.Property<int>("StrSave")
                        .HasColumnType("int");

                    b.Property<int>("Survival")
                        .HasColumnType("int");

                    b.Property<int>("SwimSpeed")
                        .HasColumnType("int");

                    b.Property<int>("WalkSpeed")
                        .HasColumnType("int");

                    b.Property<int>("Wis")
                        .HasColumnType("int");

                    b.Property<int>("WisSave")
                        .HasColumnType("int");

                    b.Property<int>("XP")
                        .HasColumnType("int");

                    b.HasKey("PlayerID");

                    b.ToTable("Player");
                });

            modelBuilder.Entity("DnDEncounters.Models.StandardAction", b =>
                {
                    b.Property<int>("StandardActionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MonsterID")
                        .HasColumnType("int");

                    b.Property<int?>("NPCID")
                        .HasColumnType("int");

                    b.HasKey("StandardActionID");

                    b.HasIndex("MonsterID");

                    b.HasIndex("NPCID");

                    b.ToTable("StandardAction");
                });

            modelBuilder.Entity("DnDEncounters.Models.Feature", b =>
                {
                    b.HasOne("DnDEncounters.Models.Monster", null)
                        .WithMany("Features")
                        .HasForeignKey("MonsterID");

                    b.HasOne("DnDEncounters.Models.NPC", null)
                        .WithMany("Features")
                        .HasForeignKey("NPCID");

                    b.HasOne("DnDEncounters.Models.Player", null)
                        .WithMany("Features")
                        .HasForeignKey("PlayerID");
                });

            modelBuilder.Entity("DnDEncounters.Models.Language", b =>
                {
                    b.HasOne("DnDEncounters.Models.Monster", null)
                        .WithMany("Languages")
                        .HasForeignKey("MonsterID");

                    b.HasOne("DnDEncounters.Models.NPC", null)
                        .WithMany("Languages")
                        .HasForeignKey("NPCID");

                    b.HasOne("DnDEncounters.Models.Player", null)
                        .WithMany("Languages")
                        .HasForeignKey("PlayerID");
                });

            modelBuilder.Entity("DnDEncounters.Models.LegendaryAction", b =>
                {
                    b.HasOne("DnDEncounters.Models.Monster", null)
                        .WithMany("LegendaryActions")
                        .HasForeignKey("MonsterID");

                    b.HasOne("DnDEncounters.Models.NPC", null)
                        .WithMany("LegendaryActions")
                        .HasForeignKey("NPCID");
                });

            modelBuilder.Entity("DnDEncounters.Models.StandardAction", b =>
                {
                    b.HasOne("DnDEncounters.Models.Monster", null)
                        .WithMany("Actions")
                        .HasForeignKey("MonsterID");

                    b.HasOne("DnDEncounters.Models.NPC", null)
                        .WithMany("Actions")
                        .HasForeignKey("NPCID");
                });
#pragma warning restore 612, 618
        }
    }
}
