// <auto-generated />
using DnDEncounters.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DnDEncounters.Migrations
{
    [DbContext(typeof(DnDEncounterContext))]
    [Migration("20200113183035_AddLinkageTables")]
    partial class AddLinkageTables
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DnDEncounters.Models.Feature", b =>
                {
                    b.Property<int>("FeatureID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FeatureID");

                    b.ToTable("Feature");
                });

            modelBuilder.Entity("DnDEncounters.Models.Language", b =>
                {
                    b.Property<int>("LanguageID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LanguageID");

                    b.ToTable("Language");
                });

            modelBuilder.Entity("DnDEncounters.Models.LegendaryAction", b =>
                {
                    b.Property<int>("LegendaryActionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LegendaryActionId");

                    b.ToTable("LegendaryAction");
                });

            modelBuilder.Entity("DnDEncounters.Models.Monster", b =>
                {
                    b.Property<int>("MonsterID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AC")
                        .HasColumnType("int");

                    b.Property<int>("Acrobatics")
                        .HasColumnType("int");

                    b.Property<string>("Alignment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AnimalHandling")
                        .HasColumnType("int");

                    b.Property<int>("Arcana")
                        .HasColumnType("int");

                    b.Property<int>("Athletics")
                        .HasColumnType("int");

                    b.Property<int>("CR")
                        .HasColumnType("int");

                    b.Property<int>("Cha")
                        .HasColumnType("int");

                    b.Property<int>("ChaSave")
                        .HasColumnType("int");

                    b.Property<int>("Con")
                        .HasColumnType("int");

                    b.Property<int>("ConSave")
                        .HasColumnType("int");

                    b.Property<int>("Deception")
                        .HasColumnType("int");

                    b.Property<int>("Dex")
                        .HasColumnType("int");

                    b.Property<int>("DexSave")
                        .HasColumnType("int");

                    b.Property<int>("FlySpeed")
                        .HasColumnType("int");

                    b.Property<int>("HP")
                        .HasColumnType("int");

                    b.Property<int>("History")
                        .HasColumnType("int");

                    b.Property<int>("Insight")
                        .HasColumnType("int");

                    b.Property<int>("Int")
                        .HasColumnType("int");

                    b.Property<int>("IntSave")
                        .HasColumnType("int");

                    b.Property<int>("Intimidation")
                        .HasColumnType("int");

                    b.Property<int>("Investigation")
                        .HasColumnType("int");

                    b.Property<int>("Medicine")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Nature")
                        .HasColumnType("int");

                    b.Property<int>("PassiveInsight")
                        .HasColumnType("int");

                    b.Property<int>("PassiveInvestigation")
                        .HasColumnType("int");

                    b.Property<int>("PassivePerception")
                        .HasColumnType("int");

                    b.Property<int>("Perception")
                        .HasColumnType("int");

                    b.Property<int>("Performance")
                        .HasColumnType("int");

                    b.Property<int>("Persuasion")
                        .HasColumnType("int");

                    b.Property<int>("Religion")
                        .HasColumnType("int");

                    b.Property<int>("SleightOfHand")
                        .HasColumnType("int");

                    b.Property<string>("Species")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Stealth")
                        .HasColumnType("int");

                    b.Property<int>("Str")
                        .HasColumnType("int");

                    b.Property<int>("StrSave")
                        .HasColumnType("int");

                    b.Property<int>("Survival")
                        .HasColumnType("int");

                    b.Property<int>("SwimSpeed")
                        .HasColumnType("int");

                    b.Property<int>("WalkSpeed")
                        .HasColumnType("int");

                    b.Property<int>("Wis")
                        .HasColumnType("int");

                    b.Property<int>("WisSave")
                        .HasColumnType("int");

                    b.Property<int>("XP")
                        .HasColumnType("int");

                    b.HasKey("MonsterID");

                    b.ToTable("Monster");
                });

            modelBuilder.Entity("DnDEncounters.Models.MonsterAction", b =>
                {
                    b.Property<int>("MonsterActionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("MonsterID")
                        .HasColumnType("int");

                    b.Property<int>("StandardActionID")
                        .HasColumnType("int");

                    b.HasKey("MonsterActionID");

                    b.HasIndex("MonsterID");

                    b.HasIndex("StandardActionID");

                    b.ToTable("MonsterAction");
                });

            modelBuilder.Entity("DnDEncounters.Models.MonsterFeature", b =>
                {
                    b.Property<int>("MonsterFeatureID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("FeatureID")
                        .HasColumnType("int");

                    b.Property<int>("MonsterID")
                        .HasColumnType("int");

                    b.HasKey("MonsterFeatureID");

                    b.HasIndex("FeatureID");

                    b.HasIndex("MonsterID");

                    b.ToTable("MonsterFeature");
                });

            modelBuilder.Entity("DnDEncounters.Models.MonsterLanguage", b =>
                {
                    b.Property<int>("MonsterLanguageID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("LanguageID")
                        .HasColumnType("int");

                    b.Property<int>("MonsterID")
                        .HasColumnType("int");

                    b.HasKey("MonsterLanguageID");

                    b.HasIndex("LanguageID");

                    b.HasIndex("MonsterID");

                    b.ToTable("MonsterLanguage");
                });

            modelBuilder.Entity("DnDEncounters.Models.MonsterLegendaryAction", b =>
                {
                    b.Property<int>("MonsterLegendaryActionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("LegendaryActionID")
                        .HasColumnType("int");

                    b.Property<int>("MonsterID")
                        .HasColumnType("int");

                    b.HasKey("MonsterLegendaryActionID");

                    b.HasIndex("LegendaryActionID");

                    b.HasIndex("MonsterID");

                    b.ToTable("MonsterLegendaryAction");
                });

            modelBuilder.Entity("DnDEncounters.Models.NPC", b =>
                {
                    b.Property<int>("NPCID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AC")
                        .HasColumnType("int");

                    b.Property<int>("Acrobatics")
                        .HasColumnType("int");

                    b.Property<string>("Alignment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AnimalHandling")
                        .HasColumnType("int");

                    b.Property<int>("Arcana")
                        .HasColumnType("int");

                    b.Property<int>("Athletics")
                        .HasColumnType("int");

                    b.Property<int>("Cha")
                        .HasColumnType("int");

                    b.Property<int>("ChaSave")
                        .HasColumnType("int");

                    b.Property<int>("Con")
                        .HasColumnType("int");

                    b.Property<int>("ConSave")
                        .HasColumnType("int");

                    b.Property<int>("Deception")
                        .HasColumnType("int");

                    b.Property<int>("Dex")
                        .HasColumnType("int");

                    b.Property<int>("DexSave")
                        .HasColumnType("int");

                    b.Property<int>("FlySpeed")
                        .HasColumnType("int");

                    b.Property<int>("HP")
                        .HasColumnType("int");

                    b.Property<int>("History")
                        .HasColumnType("int");

                    b.Property<int>("Insight")
                        .HasColumnType("int");

                    b.Property<int>("Int")
                        .HasColumnType("int");

                    b.Property<int>("IntSave")
                        .HasColumnType("int");

                    b.Property<int>("Intimidation")
                        .HasColumnType("int");

                    b.Property<int>("Investigation")
                        .HasColumnType("int");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<int>("Medicine")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Nature")
                        .HasColumnType("int");

                    b.Property<int>("PassiveInsight")
                        .HasColumnType("int");

                    b.Property<int>("PassiveInvestigation")
                        .HasColumnType("int");

                    b.Property<int>("PassivePerception")
                        .HasColumnType("int");

                    b.Property<int>("Perception")
                        .HasColumnType("int");

                    b.Property<int>("Performance")
                        .HasColumnType("int");

                    b.Property<int>("Persuasion")
                        .HasColumnType("int");

                    b.Property<int>("Religion")
                        .HasColumnType("int");

                    b.Property<int>("SleightOfHand")
                        .HasColumnType("int");

                    b.Property<string>("Species")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Stealth")
                        .HasColumnType("int");

                    b.Property<int>("Str")
                        .HasColumnType("int");

                    b.Property<int>("StrSave")
                        .HasColumnType("int");

                    b.Property<int>("Survival")
                        .HasColumnType("int");

                    b.Property<int>("SwimSpeed")
                        .HasColumnType("int");

                    b.Property<int>("WalkSpeed")
                        .HasColumnType("int");

                    b.Property<int>("Wis")
                        .HasColumnType("int");

                    b.Property<int>("WisSave")
                        .HasColumnType("int");

                    b.Property<int>("XP")
                        .HasColumnType("int");

                    b.HasKey("NPCID");

                    b.ToTable("NPC");
                });

            modelBuilder.Entity("DnDEncounters.Models.NPCAction", b =>
                {
                    b.Property<int>("NPCActionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("NPC")
                        .HasColumnType("int");

                    b.Property<int>("NPCID")
                        .HasColumnType("int");

                    b.Property<int>("StandardActionID")
                        .HasColumnType("int");

                    b.HasKey("NPCActionID");

                    b.HasIndex("NPCID");

                    b.HasIndex("StandardActionID");

                    b.ToTable("NPCAction");
                });

            modelBuilder.Entity("DnDEncounters.Models.NPCFeature", b =>
                {
                    b.Property<int>("NPCFeatureID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("FeatureID")
                        .HasColumnType("int");

                    b.Property<int>("NPC")
                        .HasColumnType("int");

                    b.Property<int>("NPCID")
                        .HasColumnType("int");

                    b.HasKey("NPCFeatureID");

                    b.HasIndex("FeatureID");

                    b.HasIndex("NPCID");

                    b.ToTable("NPCFeature");
                });

            modelBuilder.Entity("DnDEncounters.Models.NPCLanguage", b =>
                {
                    b.Property<int>("NPCLanguageID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("LanguageID")
                        .HasColumnType("int");

                    b.Property<int>("NPCID")
                        .HasColumnType("int");

                    b.HasKey("NPCLanguageID");

                    b.HasIndex("LanguageID");

                    b.HasIndex("NPCID");

                    b.ToTable("NPCLanguage");
                });

            modelBuilder.Entity("DnDEncounters.Models.NPCLegendaryAction", b =>
                {
                    b.Property<int>("NPCLegendaryActionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("LEgendaryActionID")
                        .HasColumnType("int");

                    b.Property<int>("NPC")
                        .HasColumnType("int");

                    b.Property<int>("NPCID")
                        .HasColumnType("int");

                    b.HasKey("NPCLegendaryActionID");

                    b.HasIndex("LEgendaryActionID");

                    b.HasIndex("NPCID");

                    b.ToTable("NPCLegendaryAction");
                });

            modelBuilder.Entity("DnDEncounters.Models.Player", b =>
                {
                    b.Property<int>("PlayerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AC")
                        .HasColumnType("int");

                    b.Property<int>("Acrobatics")
                        .HasColumnType("int");

                    b.Property<string>("Alignment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AnimalHandling")
                        .HasColumnType("int");

                    b.Property<int>("Arcana")
                        .HasColumnType("int");

                    b.Property<int>("Athletics")
                        .HasColumnType("int");

                    b.Property<int>("Cha")
                        .HasColumnType("int");

                    b.Property<int>("ChaSave")
                        .HasColumnType("int");

                    b.Property<int>("Con")
                        .HasColumnType("int");

                    b.Property<int>("ConSave")
                        .HasColumnType("int");

                    b.Property<int>("Deception")
                        .HasColumnType("int");

                    b.Property<int>("Dex")
                        .HasColumnType("int");

                    b.Property<int>("DexSave")
                        .HasColumnType("int");

                    b.Property<int>("FlySpeed")
                        .HasColumnType("int");

                    b.Property<int>("HP")
                        .HasColumnType("int");

                    b.Property<int>("History")
                        .HasColumnType("int");

                    b.Property<int>("Insight")
                        .HasColumnType("int");

                    b.Property<int>("Int")
                        .HasColumnType("int");

                    b.Property<int>("IntSave")
                        .HasColumnType("int");

                    b.Property<int>("Intimidation")
                        .HasColumnType("int");

                    b.Property<int>("Investigation")
                        .HasColumnType("int");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<int>("Medicine")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Nature")
                        .HasColumnType("int");

                    b.Property<int>("PassiveInsight")
                        .HasColumnType("int");

                    b.Property<int>("PassiveInvestigation")
                        .HasColumnType("int");

                    b.Property<int>("PassivePerception")
                        .HasColumnType("int");

                    b.Property<int>("Perception")
                        .HasColumnType("int");

                    b.Property<int>("Performance")
                        .HasColumnType("int");

                    b.Property<int>("Persuasion")
                        .HasColumnType("int");

                    b.Property<int>("ProficiencyBonus")
                        .HasColumnType("int");

                    b.Property<int>("Religion")
                        .HasColumnType("int");

                    b.Property<int>("SleightOfHand")
                        .HasColumnType("int");

                    b.Property<string>("Species")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Stealth")
                        .HasColumnType("int");

                    b.Property<int>("Str")
                        .HasColumnType("int");

                    b.Property<int>("StrSave")
                        .HasColumnType("int");

                    b.Property<int>("Survival")
                        .HasColumnType("int");

                    b.Property<int>("SwimSpeed")
                        .HasColumnType("int");

                    b.Property<int>("WalkSpeed")
                        .HasColumnType("int");

                    b.Property<int>("Wis")
                        .HasColumnType("int");

                    b.Property<int>("WisSave")
                        .HasColumnType("int");

                    b.Property<int>("XP")
                        .HasColumnType("int");

                    b.HasKey("PlayerID");

                    b.ToTable("Player");
                });

            modelBuilder.Entity("DnDEncounters.Models.PlayerLanguage", b =>
                {
                    b.Property<int>("PlayerLanguageID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("LanguageID")
                        .HasColumnType("int");

                    b.Property<int>("PlayerID")
                        .HasColumnType("int");

                    b.HasKey("PlayerLanguageID");

                    b.HasIndex("PlayerID");

                    b.ToTable("PlayerLanguage");
                });

            modelBuilder.Entity("DnDEncounters.Models.StandardAction", b =>
                {
                    b.Property<int>("StandardActionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StandardActionID");

                    b.ToTable("StandardAction");
                });

            modelBuilder.Entity("DnDEncounters.Models.MonsterAction", b =>
                {
                    b.HasOne("DnDEncounters.Models.Monster", "Monster")
                        .WithMany("Actions")
                        .HasForeignKey("MonsterID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DnDEncounters.Models.StandardAction", "StandardAction")
                        .WithMany()
                        .HasForeignKey("StandardActionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DnDEncounters.Models.MonsterFeature", b =>
                {
                    b.HasOne("DnDEncounters.Models.Feature", "Feature")
                        .WithMany()
                        .HasForeignKey("FeatureID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DnDEncounters.Models.Monster", "Monster")
                        .WithMany("Features")
                        .HasForeignKey("MonsterID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DnDEncounters.Models.MonsterLanguage", b =>
                {
                    b.HasOne("DnDEncounters.Models.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DnDEncounters.Models.Monster", "Monster")
                        .WithMany("Languages")
                        .HasForeignKey("MonsterID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DnDEncounters.Models.MonsterLegendaryAction", b =>
                {
                    b.HasOne("DnDEncounters.Models.LegendaryAction", "LegendaryAction")
                        .WithMany()
                        .HasForeignKey("LegendaryActionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DnDEncounters.Models.Monster", "Monster")
                        .WithMany("LegendaryActions")
                        .HasForeignKey("MonsterID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DnDEncounters.Models.NPCAction", b =>
                {
                    b.HasOne("DnDEncounters.Models.NPC", null)
                        .WithMany("Actions")
                        .HasForeignKey("NPCID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DnDEncounters.Models.StandardAction", "StandardAction")
                        .WithMany()
                        .HasForeignKey("StandardActionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DnDEncounters.Models.NPCFeature", b =>
                {
                    b.HasOne("DnDEncounters.Models.Feature", "Feature")
                        .WithMany()
                        .HasForeignKey("FeatureID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DnDEncounters.Models.NPC", null)
                        .WithMany("Features")
                        .HasForeignKey("NPCID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DnDEncounters.Models.NPCLanguage", b =>
                {
                    b.HasOne("DnDEncounters.Models.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DnDEncounters.Models.NPC", "NPC")
                        .WithMany("Languages")
                        .HasForeignKey("NPCID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DnDEncounters.Models.NPCLegendaryAction", b =>
                {
                    b.HasOne("DnDEncounters.Models.LegendaryAction", "LegendaryAction")
                        .WithMany()
                        .HasForeignKey("LEgendaryActionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DnDEncounters.Models.NPC", null)
                        .WithMany("LegendaryActions")
                        .HasForeignKey("NPCID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DnDEncounters.Models.PlayerLanguage", b =>
                {
                    b.HasOne("DnDEncounters.Models.Player", null)
                        .WithMany("Languages")
                        .HasForeignKey("PlayerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
